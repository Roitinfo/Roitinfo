{"ast":null,"code":"var _jsxFileName = \"/Users/nicola/Documents/Roiti/client/src/Components/Articoli.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AuthContext from '../Context/AuthContext';\nimport Header from './Header';\nimport Posts from './Posts';\nimport './Articoli.css';\nimport { Placeholder } from 'rsuite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Articoli() {\n  _s();\n\n  const {\n    Paragraph\n  } = Placeholder;\n  const {\n    urlServer\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState();\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {\n    const fetchPosts = async () => {\n      setLoading(true);\n      const res = await axios.post(`${urlServer}/posts`).then(res => {\n        console.log(res.data);\n      });\n      setLoading(false);\n    };\n\n    fetchPosts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: posts,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Articoli, \"e1ugTPG15owXXvNITTXL3osIVYA=\");\n\n_c = Articoli;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articoli\");","map":{"version":3,"sources":["/Users/nicola/Documents/Roiti/client/src/Components/Articoli.jsx"],"names":["React","useContext","useState","useEffect","axios","AuthContext","Header","Posts","Placeholder","Articoli","Paragraph","urlServer","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","fetchPosts","res","post","then","console","log","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAEA,OAAO,gBAAP;AACA,SAASC,WAAT,QAA4B,QAA5B;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAgBF,WAAtB;AAEA,QAAM;AAAEG,IAAAA;AAAF,MAAgBV,UAAU,CAACI,WAAD,CAAhC;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,EAAlC;AACA,QAAM,CAACY,OAAD,EAAUC,UAAV,IAAwBb,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACc,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACgB,YAAD,EAAeC,eAAf,IAAkCjB,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMiB,UAAU,GAAG,YAAY;AAC3BL,MAAAA,UAAU,CAAC,IAAD,CAAV;AACA,YAAMM,GAAG,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAY,GAAEX,SAAU,QAAxB,EAAiCY,IAAjC,CAAsCF,GAAG,IAAI;AAC3DG,QAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACK,IAAhB;AACH,OAFiB,CAAlB;AAGAX,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KAND;;AAQAK,IAAAA,UAAU;AACb,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAER,KAAd;AAAqB,MAAA,OAAO,EAAEE;AAA9B;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA5BuBL,Q;;KAAAA,Q","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AuthContext from '../Context/AuthContext'\nimport Header from './Header'\nimport Posts from './Posts'\n\nimport './Articoli.css'\nimport { Placeholder } from 'rsuite'\n\nexport default function Articoli() {\n    const { Paragraph } = Placeholder\n\n    const { urlServer } = useContext(AuthContext)\n\n    const [posts, setPosts] = useState()\n    const [loading, setLoading] = useState(false)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage, setPostsPerPage] = useState(10)\n\n    useEffect(() => {\n        const fetchPosts = async () => {\n            setLoading(true)\n            const res = await axios.post(`${urlServer}/posts`).then(res => {\n                console.log(res.data)\n            })\n            setLoading(false)\n        }\n        \n        fetchPosts()\n    }, [])\n\n    return (\n        <div>\n            <Header />\n            <Posts posts={posts} loading={loading} />\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}