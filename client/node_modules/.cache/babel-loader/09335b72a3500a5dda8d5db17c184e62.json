{"ast":null,"code":"var _jsxFileName = \"/Users/nicola/Documents/Roiti/client/src/Components/NewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from 'react';\nimport AuthContext from '../Context/AuthContext';\nimport { Button, FlexboxGrid, TagGroup, Tag, IconButton, Icon, Input } from 'rsuite';\nimport EditorJs from 'react-editor-js';\nimport CheckList from '@editorjs/checklist';\nimport List from '@editorjs/list';\nimport Delimiter from '@editorjs/delimiter';\nimport InlineCode from '@editorjs/inline-code';\nimport Marker from '@editorjs/marker';\nimport Header from '@editorjs/header';\nimport LinkTool from '@editorjs/link';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewPost() {\n  _s();\n\n  const [data, setData] = useState();\n  const [state, setState] = useState({\n    typing: false,\n    inputValue: '',\n    tags: ['javascript', 'css', 'react']\n  });\n  const [renderInput, setrenderInput] = useState('');\n  const {\n    urlServer\n  } = useContext(AuthContext);\n  const [title, setTitle] = useState('');\n  useEffect(() => {\n    console.log(\"Ã  cambiato\");\n    renderInputFun();\n  }, [state]);\n\n  const save = async () => {\n    const post = await data.save();\n    post['tags'] = state.tags;\n    console.log(post);\n    axios.post(`${urlServer}/post/add`, {\n      post\n    }).then(res => {\n      console.log(res.data);\n    });\n  };\n\n  const handleButtonClick = () => {\n    let e = state;\n    e.typing = true;\n    setState(e);\n    renderInputFun();\n  };\n\n  const handleInputChange = inputValue => {\n    let e = state;\n    e.inputValue = inputValue;\n    setState(e);\n    renderInputFun();\n  };\n\n  const handleInputConfirm = () => {\n    const {\n      inputValue,\n      tags\n    } = state;\n    const nextTags = inputValue ? [...tags, inputValue] : tags;\n    let e = state;\n    e.tags = nextTags;\n    e.typing = false;\n    e.inputValue = '';\n    console.log(e);\n    setState(e);\n    renderInputFun();\n  };\n\n  const handleTagRemove = tag => {\n    const {\n      tags\n    } = state;\n    const nextTags = tags.filter(item => item !== tag);\n    setState({\n      tags: nextTags\n    });\n  };\n\n  const renderInputFun = async () => {\n    const {\n      typing,\n      inputValue\n    } = state;\n\n    if (typing) {\n      setrenderInput( /*#__PURE__*/_jsxDEV(Input, {\n        className: \"tag-input\",\n        size: \"xs\",\n        style: {\n          width: 70\n        },\n        value: inputValue,\n        onChange: handleInputChange,\n        onBlur: handleInputConfirm,\n        onPressEnter: handleInputConfirm,\n        id: \"inputTag\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this));\n      return;\n    }\n\n    setrenderInput( /*#__PURE__*/_jsxDEV(IconButton, {\n      className: \"tag-add-btn\",\n      onClick: handleButtonClick,\n      icon: /*#__PURE__*/_jsxDEV(Icon, {\n        icon: \"plus\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }, this),\n      appearance: \"ghost\",\n      size: \"xs\",\n      id: \"btnPlus\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this));\n  };\n\n  const {\n    tags\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"editor\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Titolo dell'articolo\",\n      value: title,\n      onChange: e => setTitle(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(EditorJs, {\n      data: data,\n      instanceRef: e => setData(e),\n      tools: {\n        Header,\n        CheckList,\n        List,\n        Delimiter,\n        InlineCode,\n        Marker,\n        LinkTool\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TagGroup, {\n      children: [tags.map((item, index) => /*#__PURE__*/_jsxDEV(Tag, {\n        closable: true,\n        onClose: () => {\n          handleTagRemove(item);\n        },\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this)), renderInput]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: save,\n        appearance: \"primary\",\n        children: \"Salva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NewPost, \"dPwwCfwt7mpC9AK1TdrERhnwMWo=\");\n\n_c = NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["/Users/nicola/Documents/Roiti/client/src/Components/NewPost.js"],"names":["React","useState","useEffect","useContext","AuthContext","Button","FlexboxGrid","TagGroup","Tag","IconButton","Icon","Input","EditorJs","CheckList","List","Delimiter","InlineCode","Marker","Header","LinkTool","axios","NewPost","data","setData","state","setState","typing","inputValue","tags","renderInput","setrenderInput","urlServer","title","setTitle","console","log","renderInputFun","save","post","then","res","handleButtonClick","e","handleInputChange","handleInputConfirm","nextTags","handleTagRemove","tag","filter","item","width","map","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from 'react'\nimport AuthContext from '../Context/AuthContext'\n\nimport { Button, FlexboxGrid, TagGroup, Tag, IconButton, Icon, Input } from 'rsuite'\n\n\nimport EditorJs from 'react-editor-js';\nimport CheckList from '@editorjs/checklist';\nimport List from '@editorjs/list'\nimport Delimiter from '@editorjs/delimiter'\nimport InlineCode from '@editorjs/inline-code'\nimport Marker from '@editorjs/marker'\nimport Header from '@editorjs/header'\nimport LinkTool from '@editorjs/link'\nimport axios from 'axios';\n\nexport default function NewPost() {\n    const [data, setData] = useState()\n    const [state, setState] = useState({\n        typing: false,\n        inputValue: '',\n        tags: ['javascript', 'css', 'react']\n    })\n    const [renderInput, setrenderInput] = useState('')\n\n    const { urlServer } = useContext(AuthContext)\n\n    const [title, setTitle] = useState('')\n\n    useEffect(() => {\n        console.log(\"Ã  cambiato\")\n        renderInputFun()\n    }, [state])\n\n\n\n    const save = async () => {\n        const post = await data.save()\n\n        post['tags'] = state.tags\n\n        console.log(post)\n\n        axios.post(`${urlServer}/post/add`, {post}).then(res => {\n            console.log(res.data)\n        })\n    }\n\n    const handleButtonClick = () => {\n        let e = state\n        e.typing = true\n\n        setState(e)\n\n        renderInputFun()\n      }\n\n      const handleInputChange = (inputValue) => {\n          let e = state\n\n          e.inputValue = inputValue\n\n        setState(e);\n\n        renderInputFun()\n      }\n\n      const handleInputConfirm = () => {\n        const { inputValue, tags } = state;\n        const nextTags = inputValue ? [...tags, inputValue] : tags;\n\n        let e = state\n\n        e.tags = nextTags\n        e.typing = false\n        e.inputValue = ''\n\n        console.log(e)\n\n        setState(e);\n\n        renderInputFun()\n      }\n\n    const handleTagRemove = (tag) => {\n        const { tags } = state;\n        const nextTags = tags.filter(item => item !== tag);\n        setState({\n            tags: nextTags\n        });\n    }\n\n    const renderInputFun = async () => {\n        const { typing, inputValue } = state;\n\n        if (typing) {\n            setrenderInput (\n                <Input\n                    className=\"tag-input\"\n                    size=\"xs\"\n                    style={{ width: 70 }}\n                    value={inputValue}\n                    onChange={handleInputChange}\n                    onBlur={handleInputConfirm}\n                    onPressEnter={handleInputConfirm}\n                    id=\"inputTag\"\n                />\n            );\n\n            return\n        }\n\n        setrenderInput ( \n            <IconButton\n                className=\"tag-add-btn\"\n                onClick={handleButtonClick}\n                icon={<Icon icon=\"plus\" />}\n                appearance=\"ghost\"\n                size=\"xs\"\n                id=\"btnPlus\"\n            />\n        );\n    }\n\n    const { tags } = state\n\n    return (\n        <div id=\"editor\">\n            <Input placeholder=\"Titolo dell'articolo\" value={title} onChange={e => setTitle(e)} />\n            <EditorJs data={data} instanceRef={e => setData(e)} tools={{ Header, CheckList, List, Delimiter, InlineCode, Marker, LinkTool }} />\n\n            <TagGroup>\n                {tags.map((item, index) => (\n                    <Tag\n                        key={index}\n                        closable\n                        onClose={() => {\n                            handleTagRemove(item);\n                        }}\n                    >\n                        {item}\n                    </Tag>\n                ))}\n                {renderInput}\n            </TagGroup>\n\n            <FlexboxGrid justify=\"center\">\n                <Button onClick={save} appearance=\"primary\">Salva</Button>\n            </FlexboxGrid>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}