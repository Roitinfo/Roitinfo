{"ast":null,"code":"(function () {\n  var cookiejs = {\n    /// Serialize the a name value pair into a cookie string suitable for\n    /// http headers. An optional options object specified cookie parameters\n    ///\n    /// serialize('foo', 'bar', { httpOnly: true })\n    ///   => \"foo=bar; httpOnly\"\n    ///\n    /// @param {String} name\n    /// @param {String} val\n    /// @param {Object} options\n    /// @return {String}\n    serialize: function (name, val, opt) {\n      opt = opt || {};\n      var enc = opt.encode || encode;\n      var pairs = [name + '=' + enc(val)];\n\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n        pairs.push('Max-Age=' + maxAge);\n      }\n\n      if (opt.domain) pairs.push('Domain=' + opt.domain);\n      if (opt.path) pairs.push('Path=' + opt.path);\n      if (opt.expires) pairs.push('Expires=' + opt.expires.toUTCString());\n      if (opt.httpOnly) pairs.push('HttpOnly');\n      if (opt.secure) pairs.push('Secure');\n      return pairs.join('; ');\n    },\n    /// Parse the given cookie header string into an object\n    /// The object has the various cookies as keys(names) => values\n    /// @param {String} str\n    /// @return {Object}\n    parse: function (str, opt) {\n      opt = opt || {};\n      var obj = {};\n      var pairs = str.split(/; */);\n      var dec = opt.decode || decode;\n      pairs.forEach(function (pair) {\n        var eq_idx = pair.indexOf('='); // skip things that don't look like key=value\n\n        if (eq_idx < 0) {\n          return;\n        }\n\n        var key = pair.substr(0, eq_idx).trim();\n        var val = pair.substr(++eq_idx, pair.length).trim(); // quoted values\n\n        if ('\"' == val[0]) {\n          val = val.slice(1, -1);\n        } // only assign once\n\n\n        if (undefined == obj[key]) {\n          try {\n            obj[key] = dec(val);\n          } catch (e) {\n            obj[key] = val;\n          }\n        }\n      });\n      return obj;\n    }\n  };\n  var encode = encodeURIComponent;\n  var decode = decodeURIComponent; // export in node environments for testing purposes.\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = cookiejs;\n  } else {\n    if (typeof define === \"function\" && define.amd) {\n      // Support for requirejs\n      define(function () {\n        return cookiejs;\n      });\n    } else {\n      // Support for include on individual pages.\n      window.cookiejs = cookiejs;\n    }\n  }\n})();","map":{"version":3,"sources":["/Users/nicola/Documents/Roiti/client/node_modules/cookie-js/cookie.js"],"names":["cookiejs","serialize","name","val","opt","enc","encode","pairs","maxAge","isNaN","Error","push","domain","path","expires","toUTCString","httpOnly","secure","join","parse","str","obj","split","dec","decode","forEach","pair","eq_idx","indexOf","key","substr","trim","length","slice","undefined","e","encodeURIComponent","decodeURIComponent","module","exports","define","amd","window"],"mappings":"AAAC,aAAW;AAEV,MAAIA,QAAQ,GAAG;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,SAAS,EAAE,UAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAwB;AACjCA,MAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,UAAIC,GAAG,GAAGD,GAAG,CAACE,MAAJ,IAAcA,MAAxB;AACA,UAAIC,KAAK,GAAG,CAACL,IAAI,GAAG,GAAP,GAAaG,GAAG,CAACF,GAAD,CAAjB,CAAZ;;AAEA,UAAI,QAAQC,GAAG,CAACI,MAAhB,EAAwB;AACtB,YAAIA,MAAM,GAAGJ,GAAG,CAACI,MAAJ,GAAa,CAA1B;AACA,YAAIC,KAAK,CAACD,MAAD,CAAT,EAAmB,MAAM,IAAIE,KAAJ,CAAU,2BAAV,CAAN;AACnBH,QAAAA,KAAK,CAACI,IAAN,CAAW,aAAaH,MAAxB;AACD;;AAED,UAAIJ,GAAG,CAACQ,MAAR,EAAgBL,KAAK,CAACI,IAAN,CAAW,YAAYP,GAAG,CAACQ,MAA3B;AAChB,UAAIR,GAAG,CAACS,IAAR,EAAcN,KAAK,CAACI,IAAN,CAAW,UAAUP,GAAG,CAACS,IAAzB;AACd,UAAIT,GAAG,CAACU,OAAR,EAAiBP,KAAK,CAACI,IAAN,CAAW,aAAaP,GAAG,CAACU,OAAJ,CAAYC,WAAZ,EAAxB;AACjB,UAAIX,GAAG,CAACY,QAAR,EAAkBT,KAAK,CAACI,IAAN,CAAW,UAAX;AAClB,UAAIP,GAAG,CAACa,MAAR,EAAgBV,KAAK,CAACI,IAAN,CAAW,QAAX;AAEhB,aAAOJ,KAAK,CAACW,IAAN,CAAW,IAAX,CAAP;AACD,KA7BY;AA+Bb;AACA;AACA;AACA;AACAC,IAAAA,KAAK,EAAE,UAASC,GAAT,EAAchB,GAAd,EAAmB;AACxBA,MAAAA,GAAG,GAAGA,GAAG,IAAI,EAAb;AACA,UAAIiB,GAAG,GAAG,EAAV;AACA,UAAId,KAAK,GAAGa,GAAG,CAACE,KAAJ,CAAU,KAAV,CAAZ;AACA,UAAIC,GAAG,GAAGnB,GAAG,CAACoB,MAAJ,IAAcA,MAAxB;AAEAjB,MAAAA,KAAK,CAACkB,OAAN,CAAc,UAASC,IAAT,EAAe;AAC3B,YAAIC,MAAM,GAAGD,IAAI,CAACE,OAAL,CAAa,GAAb,CAAb,CAD2B,CAG3B;;AACA,YAAID,MAAM,GAAG,CAAb,EAAgB;AACd;AACD;;AAED,YAAIE,GAAG,GAAGH,IAAI,CAACI,MAAL,CAAY,CAAZ,EAAeH,MAAf,EAAuBI,IAAvB,EAAV;AACA,YAAI5B,GAAG,GAAGuB,IAAI,CAACI,MAAL,CAAY,EAAEH,MAAd,EAAsBD,IAAI,CAACM,MAA3B,EAAmCD,IAAnC,EAAV,CAT2B,CAW3B;;AACA,YAAI,OAAO5B,GAAG,CAAC,CAAD,CAAd,EAAmB;AACjBA,UAAAA,GAAG,GAAGA,GAAG,CAAC8B,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACD,SAd0B,CAgB3B;;;AACA,YAAIC,SAAS,IAAIb,GAAG,CAACQ,GAAD,CAApB,EAA2B;AACzB,cAAI;AACFR,YAAAA,GAAG,CAACQ,GAAD,CAAH,GAAWN,GAAG,CAACpB,GAAD,CAAd;AACD,WAFD,CAEE,OAAOgC,CAAP,EAAU;AACVd,YAAAA,GAAG,CAACQ,GAAD,CAAH,GAAW1B,GAAX;AACD;AACF;AACF,OAxBD;AA0BA,aAAOkB,GAAP;AACD;AApEY,GAAf;AAuEA,MAAIf,MAAM,GAAG8B,kBAAb;AACA,MAAIZ,MAAM,GAAGa,kBAAb,CA1EU,CA4EV;;AACA,MAAK,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA7C,EAAuD;AACrDD,IAAAA,MAAM,CAACC,OAAP,GAAiBvC,QAAjB;AACD,GAFD,MAEO;AACL,QAAK,OAAOwC,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAA5C,EAAkD;AAChD;AACAD,MAAAA,MAAM,CAAC,YAAW;AAChB,eAAOxC,QAAP;AACD,OAFK,CAAN;AAGD,KALD,MAKO;AACL;AACA0C,MAAAA,MAAM,CAAC1C,QAAP,GAAkBA,QAAlB;AACD;AACF;AAEF,CA3FA,GAAD","sourcesContent":["(function() {\n\n  var cookiejs = {\n    /// Serialize the a name value pair into a cookie string suitable for\n    /// http headers. An optional options object specified cookie parameters\n    ///\n    /// serialize('foo', 'bar', { httpOnly: true })\n    ///   => \"foo=bar; httpOnly\"\n    ///\n    /// @param {String} name\n    /// @param {String} val\n    /// @param {Object} options\n    /// @return {String}\n    serialize: function(name, val, opt){\n      opt = opt || {};\n      var enc = opt.encode || encode;\n      var pairs = [name + '=' + enc(val)];\n\n      if (null != opt.maxAge) {\n        var maxAge = opt.maxAge - 0;\n        if (isNaN(maxAge)) throw new Error('maxAge should be a Number');\n        pairs.push('Max-Age=' + maxAge);\n      }\n\n      if (opt.domain) pairs.push('Domain=' + opt.domain);\n      if (opt.path) pairs.push('Path=' + opt.path);\n      if (opt.expires) pairs.push('Expires=' + opt.expires.toUTCString());\n      if (opt.httpOnly) pairs.push('HttpOnly');\n      if (opt.secure) pairs.push('Secure');\n\n      return pairs.join('; ');\n    },\n\n    /// Parse the given cookie header string into an object\n    /// The object has the various cookies as keys(names) => values\n    /// @param {String} str\n    /// @return {Object}\n    parse: function(str, opt) {\n      opt = opt || {};\n      var obj = {}\n      var pairs = str.split(/; */);\n      var dec = opt.decode || decode;\n\n      pairs.forEach(function(pair) {\n        var eq_idx = pair.indexOf('=')\n\n        // skip things that don't look like key=value\n        if (eq_idx < 0) {\n          return;\n        }\n\n        var key = pair.substr(0, eq_idx).trim()\n        var val = pair.substr(++eq_idx, pair.length).trim();\n\n        // quoted values\n        if ('\"' == val[0]) {\n          val = val.slice(1, -1);\n        }\n\n        // only assign once\n        if (undefined == obj[key]) {\n          try {\n            obj[key] = dec(val);\n          } catch (e) {\n            obj[key] = val;\n          }\n        }\n      });\n\n      return obj;\n    }\n  };\n\n  var encode = encodeURIComponent;\n  var decode = decodeURIComponent;\n\n  // export in node environments for testing purposes.\n  if ( typeof module !== 'undefined' && module.exports ) {\n    module.exports = cookiejs;\n  } else {\n    if ( typeof define === \"function\" && define.amd ) {\n      // Support for requirejs\n      define(function() {\n        return cookiejs;\n      });\n    } else {\n      // Support for include on individual pages.\n      window.cookiejs = cookiejs;\n    }\n  }\n\n}());\n"]},"metadata":{},"sourceType":"script"}