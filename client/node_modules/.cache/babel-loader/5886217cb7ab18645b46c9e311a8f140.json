{"ast":null,"code":"var _jsxFileName = \"/Users/nicola/Documents/Roiti/client/src/Components/Articoli.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AuthContext from '../Context/AuthContext';\nimport Header from './Header';\nimport Posts from './Posts';\nimport Pagination from './Pagination';\nimport './Articoli.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Articoli() {\n  _s();\n\n  const {\n    urlServer\n  } = useContext(AuthContext);\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(10);\n  useEffect(() => {}, []); //Get current post\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPost = posts.slice(indexOfFirstPost, indexOfLastPost);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Posts, {\n      posts: currentPost,\n      loading: loading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      posts: posts,\n      postsPerPage: postsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Articoli, \"GtTZwTNVXTsaU5enR8r9px7EBdk=\");\n\n_c = Articoli;\n\nvar _c;\n\n$RefreshReg$(_c, \"Articoli\");","map":{"version":3,"sources":["/Users/nicola/Documents/Roiti/client/src/Components/Articoli.jsx"],"names":["React","useContext","useState","useEffect","axios","AuthContext","Header","Posts","Pagination","Articoli","urlServer","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPost","slice"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,OAAO,gBAAP;;AAEA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAE/B,QAAM;AAAEC,IAAAA;AAAF,MAAgBT,UAAU,CAACI,WAAD,CAAhC;AAEA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkChB,QAAQ,CAAC,EAAD,CAAhD;AAEAC,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,EAEN,EAFM,CAAT,CAT+B,CAa/B;;AACA,QAAMgB,eAAe,GAAGJ,WAAW,GAAGE,YAAtC;AACA,QAAMG,gBAAgB,GAAGD,eAAe,GAAGF,YAA3C;AACA,QAAMI,WAAW,GAAGV,KAAK,CAACW,KAAN,CAAYF,gBAAZ,EAA8BD,eAA9B,CAApB;AAEA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEE,WAAd;AAA2B,MAAA,OAAO,EAAER;AAApC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,KAAK,EAAEF,KAAnB;AAA0B,MAAA,YAAY,EAAEM;AAAxC;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GAzBuBR,Q;;KAAAA,Q","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\nimport axios from 'axios'\nimport AuthContext from '../Context/AuthContext'\nimport Header from './Header'\nimport Posts from './Posts'\nimport Pagination from './Pagination'\n\nimport './Articoli.css'\n\nexport default function Articoli() {\n\n    const { urlServer } = useContext(AuthContext)\n\n    const [posts, setPosts] = useState([])\n    const [loading, setLoading] = useState(false)\n    const [currentPage, setCurrentPage] = useState(1)\n    const [postsPerPage, setPostsPerPage] = useState(10)\n\n    useEffect(() => {\n        \n    }, [])\n\n    //Get current post\n    const indexOfLastPost = currentPage * postsPerPage\n    const indexOfFirstPost = indexOfLastPost - postsPerPage\n    const currentPost = posts.slice(indexOfFirstPost, indexOfLastPost)\n\n    return (\n        <div>\n            <Header />\n            <Posts posts={currentPost} loading={loading} />\n            <Pagination posts={posts} postsPerPage={postsPerPage} /> \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}