{"ast":null,"code":"var _jsxFileName = \"/Users/nicola/Documents/Roiti/client/src/Components/Header.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport AuthContext from '../Context/AuthContext';\nimport axios from 'axios';\nimport './Header.css';\nimport { Button, FlexboxGrid, Modal, Input, Alert } from 'rsuite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const {\n    urlServer,\n    setUser\n  } = useContext(AuthContext);\n  const [showModal1, setShowModal1] = useState(false);\n  const [showModal2, setShowModal2] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [name, setName] = useState('');\n  const [surname, setSurname] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [controlloPsw, setControlloPsw] = useState('');\n\n  const login = () => {\n    setLoading(true);\n    axios.post(`${urlServer}/login`, {\n      email,\n      password\n    }).then(res => {\n      setLoading(false);\n\n      if (res.data) {} else {\n        Alert.error(\"Email o password sbagliati\");\n      }\n    });\n  };\n\n  const register = () => {\n    setLoading(true);\n\n    if (name == '' || surname == '' || email == '' || password == '' || controlloPsw == '') {\n      setLoading(false);\n      Alert.error(\"Completare tutti i campi\");\n      return;\n    }\n\n    if (password !== controlloPsw) {\n      setLoading(false);\n      Alert.error('Le passoword sono diverse');\n      return;\n    }\n\n    axios.post(`${urlServer}/register`, {\n      name,\n      surname,\n      email,\n      password\n    }).then(res => {\n      setUser(res.data);\n      setShowModal2(false);\n    });\n  };\n\n  const reset = () => {\n    setName('');\n    setSurname('');\n    setEmail('');\n    setPassword('');\n    setControlloPsw('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      id: \"linkNomeSito\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"nomeSito\",\n        children: \"Roitinfo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/articoli\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        appearance: \"primary\",\n        id: \"btnArticoli\",\n        children: \"Articoli\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FlexboxGrid, {\n      justify: \"end\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => setShowModal1(true),\n        appearance: \"primary\",\n        id: \"btnLogin\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"xs\",\n      show: showModal1,\n      onHide: () => {\n        setShowModal1(false);\n        reset();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e),\n          placeholder: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: password,\n          onChange: e => setPassword(e),\n          id: \"inputPsw\",\n          placeholder: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"scrittaRegister\",\n          children: [\"Non hai un accoutn? \", /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setShowModal1(false);\n              setShowModal2(true);\n              reset();\n            },\n            id: \"btnRegister\",\n            appearance: \"primary\",\n            children: \"Registrati\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 65\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          loading: loading,\n          onClick: login,\n          appearance: \"primary\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setShowModal1(false);\n            reset();\n          },\n          appearance: \"subtle\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"xs\",\n      show: showModal2,\n      onHide: () => {\n        setShowModal2(false);\n        reset();\n      },\n      children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n        children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n          children: \"Registrati\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          value: name,\n          onChange: e => setName(e),\n          placeholder: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: surname,\n          onChange: e => setSurname(e),\n          className: \"input\",\n          placeholder: \"Cognome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: email,\n          onChange: e => setEmail(e),\n          className: \"input\",\n          placeholder: \"Email\",\n          type: \"email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: password,\n          onChange: e => setPassword(e),\n          className: \"inpu\",\n          id: \"inputPsw\",\n          placeholder: \"Password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: controlloPsw,\n          onChange: e => setControlloPsw(e),\n          className: \"input\",\n          placeholder: \"Conferma password\",\n          type: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: register,\n          loading: loading,\n          appearance: \"primary\",\n          children: \"Registrati\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            setShowModal2(false);\n            reset();\n          },\n          appearance: \"subtle\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"y69OprxTEBmK0+KouVVmIbhAvYs=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/nicola/Documents/Roiti/client/src/Components/Header.jsx"],"names":["React","useState","useContext","Link","AuthContext","axios","Button","FlexboxGrid","Modal","Input","Alert","Header","urlServer","setUser","showModal1","setShowModal1","showModal2","setShowModal2","loading","setLoading","name","setName","surname","setSurname","email","setEmail","password","setPassword","controlloPsw","setControlloPsw","login","post","then","res","data","error","register","reset","e"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport AuthContext from '../Context/AuthContext'\nimport axios from 'axios'\n\nimport './Header.css'\nimport { Button, FlexboxGrid, Modal, Input, Alert } from 'rsuite'\n\nexport default function Header() {\n\n    const { urlServer, setUser } = useContext(AuthContext)\n\n    const [showModal1, setShowModal1] = useState(false)\n    const [showModal2, setShowModal2] = useState(false)\n\n    const [loading, setLoading] = useState(false)\n\n    const [name, setName] = useState('')\n    const [surname, setSurname] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [controlloPsw, setControlloPsw] = useState('')\n\n    const login = () => {\n        setLoading(true)\n\n        axios.post(`${urlServer}/login`, {email, password}).then(res => {\n            setLoading(false)\n\n            if (res.data) {\n\n            } else {\n                Alert.error(\"Email o password sbagliati\")\n            }\n        })\n    }\n\n    const register = () => {\n        setLoading(true)\n\n        if (name == '' || surname == '' || email == '' || password == '' || controlloPsw == '') {\n            setLoading(false)\n            Alert.error(\"Completare tutti i campi\")\n\n            return\n        }\n\n        if (password !== controlloPsw) {\n            setLoading(false)\n            Alert.error('Le passoword sono diverse')\n\n            return\n        }\n\n        axios.post(`${urlServer}/register`, {name, surname, email, password}).then(res => {\n            setUser(res.data)\n\n            setShowModal2(false)\n        })\n    }\n\n    const reset = () => {\n        setName('')\n        setSurname('')\n        setEmail('')\n        setPassword('')\n        setControlloPsw('')\n    }\n\n    return (\n        <div id=\"header\">\n            <Link to=\"/\" id=\"linkNomeSito\"><p id=\"nomeSito\">Roitinfo</p></Link>\n            <Link to=\"/articoli\"><Button appearance=\"primary\" id=\"btnArticoli\">Articoli</Button></Link>\n            <FlexboxGrid justify=\"end\">\n                <Button onClick={() => setShowModal1(true)} appearance=\"primary\" id=\"btnLogin\">Login</Button>\n            </FlexboxGrid>\n\n\n            {/* Modal per il login */}\n            <Modal size=\"xs\" show={showModal1} onHide={() => {setShowModal1(false); reset()}}>\n                <Modal.Header>\n                    <Modal.Title>Login</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Input value={email} onChange={e => setEmail(e)} placeholder=\"Email\" />\n                    <Input value={password} onChange={e => setPassword(e)} id=\"inputPsw\" placeholder=\"Password\" />\n                    <p id=\"scrittaRegister\">Non hai un accoutn? <Button onClick={() => { setShowModal1(false); setShowModal2(true); reset() }} id=\"btnRegister\" appearance=\"primary\">Registrati</Button></p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button loading={loading} onClick={login} appearance=\"primary\">\n                        Login\n                    </Button>\n                    <Button onClick={() => {setShowModal1(false); reset()}} appearance=\"subtle\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n\n            {/* Modal per la registrazione */}\n            <Modal size=\"xs\" show={showModal2} onHide={() => {setShowModal2(false); reset()}}>\n                <Modal.Header>\n                    <Modal.Title>Registrati</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Input value={name} onChange={e => setName(e)} placeholder=\"Nome\" />\n                    <Input value={surname} onChange={e => setSurname(e)} className=\"input\" placeholder=\"Cognome\" />\n                    <Input value={email} onChange={e => setEmail(e)} className=\"input\" placeholder=\"Email\" type=\"email\" />\n                    <Input value={password} onChange={e => setPassword(e)} className=\"inpu\" id=\"inputPsw\" placeholder=\"Password\" type=\"password\" />\n                    <Input value={controlloPsw} onChange={e => setControlloPsw(e)} className=\"input\" placeholder=\"Conferma password\" type=\"password\" />\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button onClick={register} loading={loading} appearance=\"primary\">\n                        Registrati\n                    </Button>\n                    <Button onClick={() => {setShowModal2(false); reset()}} appearance=\"subtle\">\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}